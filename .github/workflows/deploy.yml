name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Fix Permissions for Jest
        run: chmod +x ./node_modules/.bin/jest

      - name: Run Jest Tests
        run: ./node_modules/.bin/jest

  pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock flask flask_cors python-dotenv pymysql

      - name: Run Pytest
        run: pytest api/test_application.py

  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Fix Permissions for Cypress Binary
        run: chmod +x ./node_modules/.bin/cypress

      - name: Install Cypress
        run: |
          if [ -x ./node_modules/.bin/cypress ]; then
            npx cypress install
          else
            echo "Cypress binary not found or not executable"
            exit 1
          fi

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock flask flask_cors python-dotenv pymysql

      - name: Start Backend Server
        run: nohup python api/application.py &

      - name: Start Frontend Server
        run: nohup python -m http.server 8000 &

      - name: Wait for Backend Server to be Ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5001 > /dev/null; then
              echo "Backend server is up!"
              exit 0
            fi
            echo "Waiting for backend server..."
            sleep 2
          done
          echo "Backend server did not start in time"
          exit 1    

      - name: Wait for Frontend Server to be Ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8000 > /dev/null; then
              echo "Frontend server is up!"
              exit 0
            fi
            echo "Waiting for frontend server..."
            sleep 2
          done
          echo "Frontend server did not start in time"
          exit 1  

      - name: Run Cypress Tests
        run: npx cypress run
      
      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshots
          path: cypress/screenshots/**
        if: failure()  # Only upload if Cypress tests fail

  sync:
    runs-on: ubuntu-latest
    needs: [e2e, pytest, test]  # Only run if all test jobs succeeded
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Sync Changes
        if: success()
        run: |
          # Configure Git
          git config --global user.name "keithtch"
          git config --global user.email "keith.tch9@gmail.com"
          
          # Add a remote for your fork
          git remote add fork https://github.com/keithtch/SPM-Project.git || \
          git remote set-url fork https://github.com/keithtch/SPM-Project.git

          # Check for changes
          git add .
          git commit -m "Syncing changes after successful tests" || echo "No changes to commit"
          
          # Push changes to your fork
          git push fork main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is used for authentication
