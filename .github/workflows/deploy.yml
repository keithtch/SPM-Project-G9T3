name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Change this to your default branch if it's different

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify your Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Fix Permissions for Jest
        run: chmod +x ./node_modules/.bin/jest

      - name: Run Jest Tests
        run: ./node_modules/.bin/jest

  pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'  # Specify your Python version

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock flask flask_cors python-dotenv pymysql

      - name: Run Pytest
        run: pytest api/test_application.py

  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify your Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Fix Permissions for Cypress Binary
        run: chmod +x ./node_modules/.bin/cypress

      - name: Install Cypress
        run: |
          if [ -x ./node_modules/.bin/cypress ]; then
            npx cypress install
          else
            echo "Cypress binary not found or not executable"
            exit 1
          fi

      - name: Start Server
        run: |
          cd $(dirname $(find . -name SPM-Project-G9T3 -type d))
          nohup python -m http.server 8000 &

      - name: Wait for Server to be Ready
        run: |
            for i in {1..30}; do
              if curl -s http://localhost:8000 > /dev/null; then
                echo "Server is up!"
                exit 0
              fi
              echo "Waiting for server..."
              sleep 2
            done
            echo "Server did not start in time"
            exit 1  

      - name: Run Cypress Tests
        run: npx cypress run

  deploy:
    runs-on: ubuntu-latest
    needs: [test, pytest, e2e]
    if: success()
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install
  
      - name: Build Project
        run: npm run build  # This will copy files to dist

      - name: Install Netlify CLI
        run: npm install -g netlify-cli  # Install Netlify CLI

      - name: Deploy to Netlify
        run: npx netlify deploy --prod --dir=dist --site=${{ secrets.NETLIFY_SITE_ID }} --auth=${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Install Vercel CLI
        run: npm install -g vercel  # Install Vercel CLI

      - name: Deploy to Vercel
        run: npx vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} --yes --name=spm-project-g9-t3